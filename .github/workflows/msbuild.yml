name: Build

on:
  workflow_dispatch:
    inputs:
      name:
        description: Friendly Name
        default: VideoLab Virtual Camera
      count:
        description: Number of Cameras
        default: 2
        type: number
      dll:
        description: Library Name
        default: vlvcam
      version:
        description: Version
        default: 1.0.0

jobs:
  matrix:
    name: Matrix
    runs-on: ubuntu-latest
    outputs:
      count: ${{ steps.count.outputs.count }}
    steps:
    - id: count
      run: |
        cat << EOF >> $GITHUB_OUTPUT
        count=$(seq 1 "${{ inputs.count }}" | jq -cs '.')
        EOF

  build:
    name: Build Camera ${{ matrix.count }}
    runs-on: windows-latest
    needs: matrix
    strategy:
      matrix:
        name: 
          - ${{ inputs.name }}
        count: ${{ fromJSON(needs.matrix.outputs.count) }}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v5

    - name: Replace Friendly Name
      uses: richardrigutins/replace-in-files@v2
      with:
        files: src/**/*.cpp
        search-text: DirectShow Softcam
        replacement-text: ${{matrix.name }} ${{ matrix.count }}
        encoding: utf8

    - name: Replace LIBRARY Name
      uses: richardrigutins/replace-in-files@v2
      with:
        files: src/softcam/softcam.def
        search-text: LIBRARY softcam
        replacement-text: LIBRARY ${{ inputs.dll }}${{ matrix.count }}
        encoding: utf8

    - name: Replace GUID
      uses: richardrigutins/replace-in-files@v2
      with:
        files: src/softcam/softcam.cpp
        search-text: CLSID_DShowSoftcam;
        replacement-text: CLSID_DShowSoftcam_${{ matrix.count }};
        encoding: utf8

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Cache Packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.nuget/packages
          **/bin
          **/obj
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Packages
      run: nuget restore ./softcam.sln

    - name: Build Libraries
      run: msbuild /m /p:Configuration=Release /p:Platform=x64 ./softcam.sln

    - name: Build Sender
      run: msbuild /m /p:Configuration=Release /p:Platform=x64 ./examples/sender/sender.sln

    - name: Rename Files
      shell: cmd
      run: |
        move x64\Release\softcam.dll ${{ inputs.dll }}${{ matrix.count }}.dll
        move examples\sender\x64\Release\sender.exe ${{ inputs.dll }}${{ matrix.count }}.exe

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.dll }}${{ matrix.count }}
        path: |
          ${{ inputs.dll }}${{ matrix.count }}.dll
          ${{ inputs.dll }}${{ matrix.count }}.exe

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: output

      - name: Zip Artifacts
        run: |
          cp -rf src/scripts/* output/
          cd output
          zip -jr ../cameras.zip .

      - name: Remove Assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GH_PAT }}
          tag: ${{ inputs.version }}
          assets: '*.*'
          fail-if-no-assets: false
          fail-if-no-release: false

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: cameras.zip
          name: ${{ inputs.version }}
          tag_name: ${{ inputs.version }}
          token: ${{ secrets.GH_PAT }}
          body: |
            Library Name: `${{ inputs.dll }}`
            Friendly Name: `${{ inputs.name }}`
            Number of Cameras: `${{ inputs.count }}`
